"use strict";(self.webpackChunkmycelium=self.webpackChunkmycelium||[]).push([[552],{4913:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>u,frontMatter:()=>t,metadata:()=>s,toc:()=>d});var o=r(4848),l=r(8453);const t={},i="Modales",s={id:"Cours/HTML/Modales",title:"Modales",description:"Qu'est-ce qu'une modale ?",source:"@site/docs/Cours/HTML/Modales.md",sourceDirName:"Cours/HTML",slug:"/Cours/HTML/Modales",permalink:"/mycelium/docs/Cours/HTML/Modales",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Cours/HTML/Modales.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lien VS Bouton",permalink:"/mycelium/docs/Cours/HTML/Difference-lien-bouton"},next:{title:"React",permalink:"/mycelium/docs/category/react"}},a={},d=[{value:"Qu&#39;est-ce qu&#39;une <strong>modale</strong> ?",id:"quest-ce-quune-modale-",level:3},{value:"Section JavaScript Vanilla",id:"section-javascript-vanilla",level:2},{value:"Construire une modale",id:"construire-une-modale",level:3},{value:"Pouvoir fermer une modale",id:"pouvoir-fermer-une-modale",level:3},{value:"Ouvrir une modale",id:"ouvrir-une-modale",level:3},{value:"Section React",id:"section-react",level:2},{value:"Construire une modale en React",id:"construire-une-modale-en-react",level:3},{value:"Explications",id:"explications",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,l.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"modales",children:"Modales"}),"\n",(0,o.jsxs)(n.h3,{id:"quest-ce-quune-modale-",children:["Qu'est-ce qu'une ",(0,o.jsx)(n.strong,{children:"modale"})," ?"]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.a,{href:"https://codepen.io/Chrstn67/pen/VwJeQjQ",children:"D\xe9monstration sur CodePen"})}),"\n",(0,o.jsxs)(n.admonition,{type:"note",children:[(0,o.jsxs)(n.p,{children:["En HTML, une ",(0,o.jsx)(n.strong,{children:"modale"})," (ou ",(0,o.jsx)(n.em,{children:"bo\xeete de dialogue"}),") est une fen\xeatre contextuelle qui appara\xeet au-dessus de la page web principale, obligeant les utilisateurs \xe0 interagir avec elle avant de pouvoir revenir \xe0 la page principale. Les modales sont souvent utilis\xe9es pour afficher des informations importantes, recueillir des entr\xe9es utilisateur ou obtenir une confirmation avant d'ex\xe9cuter une action."]}),(0,o.jsx)(n.p,{children:"Les modales peuvent contenir divers \xe9l\xe9ments tels que du texte, des images, des formulaires, des boutons, etc."})]}),"\n",(0,o.jsx)(n.h2,{id:"section-javascript-vanilla",children:"Section JavaScript Vanilla"}),"\n",(0,o.jsx)(n.h3,{id:"construire-une-modale",children:"Construire une modale"}),"\n",(0,o.jsxs)(n.p,{children:["Pour construire une modale en HTML, on utilise la balise ",(0,o.jsx)(n.code,{children:"<dialog>"}),". On peut ajouter l'attribut ",(0,o.jsx)(n.code,{children:"open"})," pour que la modale soit ouverte par d\xe9faut."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<dialog open>\r\n  Ceci est une modale ouverte par d\xe9faut. Il est impossible de la fermer.\r\n</dialog>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"pouvoir-fermer-une-modale",children:"Pouvoir fermer une modale"}),"\n",(0,o.jsx)(n.p,{children:"Pour rendre une modale fermable, nous devons ajouter un bouton et du code JavaScript pour g\xe9rer sa fermeture."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<dialog open id="maModale">\r\n  Ceci est une modale ouverte qu\'il est possible de fermer, et de rouvrir par la\r\n  suite.\r\n  <button id="fermerModale">Fermer</button>\r\n</dialog>\r\n\r\n<script>\r\n  document\r\n    .getElementById("fermerModale")\r\n    .addEventListener("click", function () {\r\n      document.getElementById("maModale").close();\r\n    });\r\n<\/script>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"ouvrir-une-modale",children:"Ouvrir une modale"}),"\n",(0,o.jsxs)(n.p,{children:["Pour ouvrir une modale avec JavaScript, nous utilisons la m\xe9thode ",(0,o.jsx)(n.code,{children:"showModal()"})," de l'\xe9l\xe9ment ",(0,o.jsx)(n.code,{children:"<dialog>"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<dialog id="maModale">\r\n  Ceci est une modale qui peut \xeatre ouverte et ferm\xe9e.\r\n  <button id="fermerModale">Fermer</button>\r\n</dialog>\r\n\r\n<button id="ouvrirModale">Ouvrir la modale</button>\r\n\r\n<script>\r\n  document\r\n    .getElementById("ouvrirModale")\r\n    .addEventListener("click", function () {\r\n      document.getElementById("maModale").showModal();\r\n    });\r\n\r\n  document\r\n    .getElementById("fermerModale")\r\n    .addEventListener("click", function () {\r\n      document.getElementById("maModale").close();\r\n    });\r\n<\/script>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"section-react",children:"Section React"}),"\n",(0,o.jsx)(n.h3,{id:"construire-une-modale-en-react",children:"Construire une modale en React"}),"\n",(0,o.jsxs)(n.p,{children:["Pour construire une modale en React en utilisant la balise ",(0,o.jsx)(n.code,{children:"<dialog>"}),", nous allons cr\xe9er un composant ",(0,o.jsx)(n.strong,{children:"Modal"})," qui utilise l'\xe9tat pour g\xe9rer son ouverture et sa fermeture."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'import React, { useRef, useState } from "react";\r\nimport "./Modal.scss";\r\n\r\nconst Modal = ({ isOpen, onClose }) => {\r\n  const dialogRef = useRef(null);\r\n\r\n  React.useEffect(() => {\r\n    if (isOpen) {\r\n      dialogRef.current.showModal();\r\n    } else {\r\n      dialogRef.current.close();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  return (\r\n    <dialog ref={dialogRef}>\r\n      <p>Ceci est une modale en React.</p>\r\n      <button onClick={onClose}>Fermer</button>\r\n    </dialog>\r\n  );\r\n};\r\n\r\nconst App = () => {\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const openModal = () => {\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={openModal}>Ouvrir la modale</button>\r\n      <Modal isOpen={isModalOpen} onClose={closeModal} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\n'})}),"\n",(0,o.jsx)(n.h3,{id:"explications",children:"Explications"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Le composant ",(0,o.jsx)(n.code,{children:"Modal"})," utilise une r\xe9f\xe9rence (",(0,o.jsx)(n.code,{children:"useRef"}),") pour acc\xe9der directement \xe0 l'\xe9l\xe9ment ",(0,o.jsx)(n.code,{children:"<dialog>"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Le hook ",(0,o.jsx)(n.code,{children:"useEffect"})," est utilis\xe9 pour ouvrir (",(0,o.jsx)(n.code,{children:"showModal()"}),") ou fermer (",(0,o.jsx)(n.code,{children:"close()"}),") la modale en fonction de l'\xe9tat ",(0,o.jsx)(n.code,{children:"isOpen"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["Dans le composant ",(0,o.jsx)(n.code,{children:"App"}),", nous g\xe9rons l'\xe9tat ",(0,o.jsx)(n.code,{children:"isModalOpen"})," avec ",(0,o.jsx)(n.code,{children:"useState"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:["La fonction ",(0,o.jsx)(n.code,{children:"openModal"})," d\xe9finit ",(0,o.jsx)(n.code,{children:"isModalOpen"})," \xe0 ",(0,o.jsx)(n.code,{children:"true"})," pour ouvrir la modale, tandis que ",(0,o.jsx)(n.code,{children:"closeModal"})," d\xe9finit ",(0,o.jsx)(n.code,{children:"isModalOpen"})," \xe0 ",(0,o.jsx)(n.code,{children:"false"})," pour la fermer."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Pour ajouter des styles \xe0 la modale, vous pouvez utiliser CSS :"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"dialog {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 20px;\r\n  border: none;\r\n  border-radius: 5px;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  background-color: white;\r\n}\r\n\r\ndialog::backdrop {\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n}\r\n\r\ndialog p {\r\n  margin: 0;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n}\r\n\r\ndialog button {\r\n  margin-top: 20px;\r\n  padding: 10px 20px;\r\n  font-size: 16px;\r\n  color: white;\r\n  background-color: #007bff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n}\r\n\r\ndialog button:hover {\r\n  background-color: #0056b3;\r\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>s});var o=r(6540);const l={},t=o.createContext(l);function i(e){const n=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:i(e.components),o.createElement(t.Provider,{value:n},e.children)}}}]);